//-> EN ENTIDAD
	...	
	public void accionar(){
		this.movimiento.mover();
	}	
	...

//-> EN ENEMIGO
	...	
	Enemigo (){
		...
		movimiento = new vertical_loop(this,vertical.ABAJO);
	}

//-> EN PREMIO
	...	
	Premio(){
		...
		movimiento = new vertical(this,vertical.ABAJO);
	}

//-> EN PROYECTIL SANITARIO
	...	
	Proyectil_sanitario(){
		...
		movimiento = new vertical(this,vertical.ARRIBA);
	}

//-> EN PROYECTIL PARTICULA_v
	...	
	Particula_v(){
		...
		movimiento = new vertical(this,vertical.ABAJO);
	}

//-> EN JUGADOR
	...	
	Jugador(){
		...
		movimiento = new Horizontal(this,horizontal.DERECHA);
	}

	accionar(){
		if (juego.moviendoDerecha){
			this.movimiento.setDireccion(movimieto.DERECHA);
			this.movimiento.mover();
		}
		if(juego.moviendoIzquierda){
			this.movimiento.setDireccion(movimieto.IZQUIERDA);
			this.movimiento.mover();
		}
		if(juego.disparando){
			disparar();
		}
	}

////////////////////////////////////////////////////////////////////////////////////////////////////

//-> EN ESTRATEGIAMOVIMIENTO
	
	...
	EstrategiaMovimiento(Entidad e, int d)
	{
		this.e  = e
		this.d = d; ;
	}
	
	void setDireccion(int d)
	{
		this.direccion = d;
	}
	
	abstract void mover();
}


//-> EN VERTICAL
	public static final int ABAJO = 1;
	public static final int ARRIBA = -1;
	
	public Vertical(Entidad e, int d)
	{
		super(e, d);
	}
	
	public void mover()
	{
		Grafico g = e.getGrafico();
		g.setPosition(g.getX(), g.getY() + this.direccion * e.getVelocidad()); //falta controlar que no se salga del frame
	}

//-> EN VERTICAL LOOP
	public Vertical_loop(Entidad e)
	{
		super(e, EstrategiaMovimiento.ABAJO);
	}
	public void mover()
	{
		Grafico g = e.getGrafico();
		g.setPosition(g.getX(), g.getY() + this.direccion * e.getVelocidad()); 
		if(g.getY>ventana.getAltura())
			g.setPosition(g.getX(), 0);
	}


//-> HORIZONTAL
	static final int DERECHA = 1;
	static final int IZQUIERDA = -1;
	
	
	MovimientoVertical(Entidad e, int d)	{
		super(e, d);
	}
	
	void mover(){
		Grafico g = this.e.getGrafico();
		g.setPosition(g.getX() + this.direccion * e.getVelocidad(), g.getY()); //falta controlar que no se salga del frame
	}
}


//////////////////////////////////////////////////////////////////////////////////////////////////////

//DESDE GUI 
public class oyenteTeclado implements KeyListener{	
	...
	public void KeyPressed(KeyEvent e) {
		int codigoTecla = e.getKeyCode();
		if (codigoTecla == KeyEvent.VK_LEFT || codigoTecla == KeyEvent.VK_A) {
			VerticalShot.setMoviendoIzquierda(true);
		}
		if (codigoTecla == KeyEvent.VK_RIGHT || codigoTecla == KeyEvent.VK_D) {
			VerticalShot.setMoviendoDerecha(true);
		}
		if (codigoTecla == KeyEvent.VK_SPACE) {
			VerticalShot.setDisparando(true);
		}
	}

	public void KeyReleased(KeyEvent e) {
		int codigoTecla = e.getKeyCode();
		if (codigoTecla == KeyEvent.VK_LEFT || codigoTecla == KeyEvent.VK_A) {
			VerticalShot.setMoviendoIzquierda(false);
		}
		if (codigoTecla == KeyEvent.VK_RIGHT || codigoTecla == KeyEvent.VK_D) {
			VerticalShot.setMoviendoDerecha(false);
		}
		if (codigoTecla == KeyEvent.VK_SPACE) {
			VerticalShot.setDisparando(false);
		}

	}
}












